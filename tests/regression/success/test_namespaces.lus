type two = int ;

type one = { blah: two } ;

const two_c = 0.0 ;

-- node two: real -> real
node two (in: real) returns (out: real) ;
let
  out = 0.0 -> pre in ;
tel

-- contract one: two -> real
contract one (in: two) returns (out: real) ;
let
  assume in >= 0 ;
  guarantee out >= 0.0 ;
tel

-- contract two: two -> real
contract two (in: two) returns (out: real) ;
let
  import one (in) returns (out) ;
  assume in >= 0 ;
  guarantee out >= 0.0 ;
tel

-- node one: real -> real
node one (in: real) returns (out: real) ;
(*@contract
  import two ((int in)) returns (out) ;
*)
let
  out = two(two_c -> pre in) ;
tel
